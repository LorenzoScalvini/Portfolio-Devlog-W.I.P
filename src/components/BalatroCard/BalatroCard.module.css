/* BalatroCard.module.css */
.container {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 20px;
  position: relative;
  perspective: 35rem;
  transition: scale 0.1s;
}

.container:has(.grid :hover) {
  scale: 1.05;
}

.cardWrapper {
  position: relative;
  display: inline-block;
}

.card {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
  transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  width: 250px;
  height: 350px;
  border: 0.5vmin solid #fff;
  box-shadow: 0 0 0 0.2vmin black, -1vmin 2vmin 1vmin 0 rgba(0, 0, 0, 0.2);
  background-image: linear-gradient(135deg, rgb(0, 0, 0) 25%, transparent 25%),
    linear-gradient(225deg, rgb(0, 0, 0) 25%, transparent 25%),
    linear-gradient(45deg, rgb(0, 0, 0) 25%, transparent 25%),
    linear-gradient(315deg, rgb(0, 0, 0) 25%, transparent 25%);
  background-position: 10px 0px, 10px 0px, 0px 0px, 0px 0px;
  background-size: 20px 20px;
  background-repeat: repeat;
  background-color: #1b1b1b;
  transform: rotate3d(var(--x), var(--y), 0, var(--r));
}

.card:hover {
  transform: translateY(-5px) scale(1.02) rotate3d(var(--x), var(--y), 0, var(--r));
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.7);
}

.luckyImage {
  display: block;
  width: 80%;
  height: auto;
  border-radius: 8px;
  transition: all 0.3s ease;
  position: relative;
  z-index: 1;
  image-rendering: pixelated;
  filter: invert(1);
}

.rainbowOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 12px;
  background: linear-gradient(
    45deg,
    #ff0000 0%,
    #ff8000 15%,
    #ffff00 30%,
    #00ff00 45%,
    #00ffff 60%,
    #0000ff 75%,
    #8000ff 90%,
    #ff00ff 100%
  );
  background-size: 300% 300%;
  opacity: 0;
  mix-blend-mode: overlay;
  transition: opacity 0.4s ease;
  z-index: 2;
  pointer-events: none;
  filter: brightness(1.2);
}

.card:hover .rainbowOverlay {
  opacity: 0.8;
  animation: rainbowFlow 3s ease-in-out infinite;
}

.cursorEffect {
  position: absolute;
  width: 120px;
  height: 120px;
  background: radial-gradient(
    circle,
    rgba(255, 0, 0, 0.9) 0%,
    rgba(255, 128, 0, 0.7) 25%,
    rgba(255, 255, 0, 0.5) 50%,
    rgba(0, 255, 0, 0.3) 75%,
    transparent 100%
  );
  border-radius: 50%;
  transform: translate(-50%, -50%) scale(0);
  opacity: 0;
  transition: all 0.3s ease;
  z-index: 3;
  pointer-events: none;
  mix-blend-mode: screen;
  filter: blur(15px) brightness(1.5);
}

.card:hover .cursorEffect {
  opacity: 1;
  transform: translate(-50%, -50%) scale(1);
}

/* Effetto bordo arcobaleno */
.card::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: linear-gradient(
    45deg,
    #ff0000,
    #ff8000,
    #ffff00,
    #00ff00,
    #00ffff,
    #0000ff,
    #8000ff,
    #ff00ff
  );
  background-size: 400% 400%;
  border-radius: 14px;
  opacity: 0;
  z-index: 0;
  animation: rainbowBorder 4s linear infinite;
  transition: opacity 0.4s ease;
}

.card:hover::before {
  opacity: 1;
}

.card::after {
  content: '';
  position: absolute;
  top: 0;
  left: -150%;
  width: 50%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.6),
    transparent
  );
  transform: skewX(-25deg);
  transition: left 0.8s ease;
  z-index: 2;
}

.card:hover::after {
  left: 150%;
}

.grid {
  position: absolute;
  inset: 0;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr 1fr;
  pointer-events: none;
}

.grid i {
  pointer-events: all;
  opacity: 0;
}

.card:has(+ .grid i:nth-child(1):hover),
.card:has(+ .grid i:nth-child(2):hover),
.card:has(+ .grid i:nth-child(5):hover),
.card:has(+ .grid i:nth-child(6):hover) {
  --x: -1;
  --y: 1;
  --angle: 125deg;
}

.card:has(+ .grid i:nth-child(3):hover),
.card:has(+ .grid i:nth-child(4):hover),
.card:has(+ .grid i:nth-child(7):hover),
.card:has(+ .grid i:nth-child(8):hover) {
  --x: -1;
  --y: -1;
  --angle: 130deg;
}

.card:has(+ .grid i:nth-child(9):hover),
.card:has(+ .grid i:nth-child(10):hover),
.card:has(+ .grid i:nth-child(13):hover),
.card:has(+ .grid i:nth-child(14):hover) {
  --x: 1;
  --y: 1;
  --angle: 135deg;
}

.card:has(+ .grid i:nth-child(11):hover),
.card:has(+ .grid i:nth-child(12):hover),
.card:has(+ .grid i:nth-child(15):hover),
.card:has(+ .grid i:nth-child(16):hover) {
  --x: 1;
  --y: -1;
  --angle: 140deg;
}

.card:has(+ .grid i:nth-child(1):hover),
.card:has(+ .grid i:nth-child(4):hover),
.card:has(+ .grid i:nth-child(13):hover),
.card:has(+ .grid i:nth-child(16):hover) {
  --r: 8deg;
}

.card:has(+ .grid i:nth-child(2):hover),
.card:has(+ .grid i:nth-child(3):hover),
.card:has(+ .grid i:nth-child(5):hover),
.card:has(+ .grid i:nth-child(8):hover),
.card:has(+ .grid i:nth-child(9):hover),
.card:has(+ .grid i:nth-child(12):hover),
.card:has(+ .grid i:nth-child(14):hover),
.card:has(+ .grid i:nth-child(15):hover) {
  --r: 4deg;
}

.card:has(+ .grid i:nth-child(6):hover),
.card:has(+ .grid i:nth-child(7):hover),
.card:has(+ .grid i:nth-child(10):hover),
.card:has(+ .grid i:nth-child(11):hover) {
  --r: 2deg;
}

.card:has(+ .grid :hover) {
  --s-o: 0.5;
  --s-s: 100%;
}

s {
  position: absolute;
  inset: 0;
  opacity: var(--s-o, 0);
  pointer-events: none;
  transition: --angle 0.2s, opacity 0.6s, background-size 0.3s;
  background-size: var(--s-s, 400%);
  background-image: 
    linear-gradient(
      var(--angle),
      rgba(255, 255, 255, 0.25),
      rgba(255, 255, 255, 0.25) 15%,
      rgba(255, 255, 255, 0.9) 20%,
      rgba(255, 255, 255, 0.9) 25%,
      rgba(255, 255, 255, 0.25) 30%,
      rgba(255, 255, 255, 0.75) 100%
    ),
    linear-gradient(
      calc(var(--angle) - 180deg),
      rgba(255, 255, 255, 0.1),
      rgba(255, 255, 255, 0.1) 15%,
      rgba(255, 255, 255, 0.8) 20%,
      rgba(255, 255, 255, 0.8) 25%,
      rgba(255, 255, 255, 0.1) 30%,
      rgba(255, 255, 255, 0.3) 100%
    ),
    linear-gradient(
      var(--angle),
      rgba(255, 255, 255, 0.25),
      rgba(255, 255, 255, 0.15) 30%,
      rgba(255, 255, 255, 0.75) 33%,
      rgba(255, 255, 255, 0.75) 33%,
      rgba(255, 255, 255, 0.15) 35%,
      rgba(255, 255, 255, 0.25) 100%
    );
}

@keyframes rainbowFlow {
  0%, 100% {
    background-position: 0% 50%;
    filter: hue-rotate(0deg) brightness(1.2);
  }
  50% {
    background-position: 100% 50%;
    filter: hue-rotate(180deg) brightness(1.5);
  }
}

@keyframes rainbowBorder {
  0% {
    background-position: 0% 50%;
    filter: hue-rotate(0deg);
  }
  100% {
    background-position: 400% 50%;
    filter: hue-rotate(360deg);
  }
}

/* Effetto di scintillio */
@keyframes sparkle {
  0%, 100% {
    opacity: 0;
    transform: scale(0) rotate(0deg);
  }
  50% {
    opacity: 1;
    transform: scale(1) rotate(180deg);
  }
}

/* Responsive */
@media (max-width: 768px) {
  .card {
    width: 200px;
    height: 280px;
  }
  
  .card:hover {
    transform: translateY(-3px) scale(1.01) rotate3d(var(--x), var(--y), 0, var(--r));
  }
}

@property --angle {
  syntax: "<angle>";
  inherits: true;
  initial-value: 135deg;
}